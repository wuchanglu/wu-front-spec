import{_ as e,c as r,a0 as a,o as d}from"./chunks/framework.D_-ChcUz.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{"home":true,"heroText":"前端工程化","tagline":"前端编码规范工程化","actionText":"立刻进入 →","actionLink":"/markdown-examples.md","features":[{"title":"完善的规范生态","details":"支持对全部前端配置实现一键接入、一键扫描、一键修复、一键升级"},{"title":"支持 Typescript","details":"提供完整的类型注释，帮助您从 0~1 掌握完整的前端规范化"},{"title":"完整的测试用例","details":"配套完整的测试用例，帮助您提升项目健壮性"}]},"headers":[],"relativePath":"index.md","filePath":"index.md"}'),n={name:"index.md"};function i(o,t,l,s,h,c){return d(),r("div",null,t[0]||(t[0]=[a('<h2 id="目的" tabindex="-1">⭐ 目的 <a class="header-anchor" href="#目的" aria-label="Permalink to &quot;:star: 目的&quot;">​</a></h2><p>抽离自己工程规范工具</p><h2 id="配套工具" tabindex="-1">🛋️ 配套工具 <a class="header-anchor" href="#配套工具" aria-label="Permalink to &quot;:couch_and_lamp: 配套工具&quot;">​</a></h2><p>引入了多个业界流行的 <code>Linter</code> 作为规约文档的配套工具，并根据规约内容定制了对应的规则包，它们包括：</p><table tabindex="0"><thead><tr><th>规约</th><th>Lint 工具</th><th>NPM包</th></tr></thead><tbody><tr><td>JavaScript 编码规范 <br> TypeScript 编码规范 <br> Node 编码规范</td><td><a href="https://eslint.org/" target="_blank" rel="noreferrer">ESLint</a></td><td>待定...</td></tr><tr><td>CSS 编码规范</td><td><a href="https://stylelint.io/" target="_blank" rel="noreferrer">stylelint</a></td><td>待定...</td></tr><tr><td>Git 规范</td><td><a href="https://commitlint.js.org/#/" target="_blank" rel="noreferrer">commitlint</a></td><td>待定...</td></tr><tr><td>文档规范</td><td><a href="https://github.com/DavidAnson/markdownlint" target="_blank" rel="noreferrer">markdownlint</a></td><td>待定...</td></tr></tbody></table>',5)]))}const f=e(n,[["render",i]]);export{m as __pageData,f as default};
